case @comment.commentable
when Scheduling
  if @comment.errors.empty?
    page.decorate @comment do |comment|
      if comment.parent_id
        comment.update_parent
      else
        comment.append_to_comments_list(parent)
      end
      comment.reset_form
    end
    page.decorate @comment.commentable.concurrent do |filter|
      filter.respond_for_update @comment.commentable
    end
  else
    page << %Q~alert("no comment.")~
  end
when Post
  # TODO clean up these page.selects y using CommentDecorator
  if @comment.errors.empty?
    page.select("ul#comments li.comment:last").after render('comments/item', comment: @comment)
    page.select('li.no-comments').remove()
    page.select('textarea#comment_body').val('')
    page.select('.comments-count').replace_with render('posts/comments_count', post: @comment.commentable)
  else
    page << %Q~alert("no comment.")~
  end
end

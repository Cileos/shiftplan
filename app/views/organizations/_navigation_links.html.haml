- defined?(organization) or raise(ArgumentError, "must provide :organization")
- if organization.present? and organization.persisted?
  - base = [organization.account, organization]
  %li.dropdown
    = link_to :info, nested_resources_for(current_organization), {:class =>  'icon-news', data: { toggle: 'dropdown'}}
    %ul
      %li= link_to :dashboard, nested_resources_for(current_organization), :class => 'icon-dashboard'
      - if (company_blog = organization.company_blog).present?
        = li_link '.news', base + [company_blog, :posts], can: [:read, organization], :class => 'icon-news'


  - active_or_not = dropdown_class polymorphic_path(base + [:plans])
  %li{class: "dropdown #{active_or_not}"}
    = link_to t(:'helpers.actions.plans'), base + [:plans], {:class =>  'icon-plans', data: { toggle: 'dropdown'}}
    = render 'organizations/plans_list', base: base, organization: organization

  -if (can? :show, Employee) || (can? :show, Team) || (can? :show, PlanTemplate) || (can? :show, Qualification)
    %li.dropdown
      = link_to t('accounts.core_data'), nested_resources_for(current_organization), {:class =>  'icon-settings', data: { toggle: 'dropdown'}}
      %ul
        = li_link '.employees',      base + [:employees],      can: [:show, Employee],      :class => 'icon-employees'
        = li_link '.teams',          base + [:teams],          can: [:show, Team],          :class => 'icon-teams'
        = li_link '.plan_templates', base + [:plan_templates], can: [:show, PlanTemplate],  :class => 'icon-templates'
        = li_link '.qualifications', base + [:qualifications], can: [:show, Qualification], :class => 'icon-qualifications'

- defined?(organization) or raise(ArgumentError, "must provide :organization")
- if organization.present? and organization.persisted?
  - base = [organization.account, organization]
  = li_link organization.name, base, can: [:read, organization], class: 'organization', data: { icon: i(:organization) }
  - if (company_blog = organization.company_blog).present?
    = li_link '.news', base + [company_blog, :posts], can: [:read, organization], data: { icon: i(:news) }
  - active_or_not = dropdown_class polymorphic_path(base + [:plans])
  %li{class: "dropdown #{active_or_not}"}
    = link_to t(:'helpers.actions.plans'), base + [:plans], { data: { toggle: 'dropdown', icon: i(:dropdown)}}
    = render 'organizations/plans_list', base: base, organization: organization
  = li_link '.employees',      base + [:employees],      can: [:show, Employee],      data: { icon: i(:employees) }
  = li_link '.teams',          base + [:teams],          can: [:show, Team],          data: { icon: i(:teams) }
  = li_link '.qualifications', base + [:qualifications], can: [:show, Qualification]
  = li_link '.plan_templates', base + [:plan_templates], can: [:show, PlanTemplate]

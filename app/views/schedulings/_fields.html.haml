- scheduling = f.object
.weekday-and-time
  .weekday
    - if scheduling.persisted?
      = f.collection_radio_buttons(:date, cwdays_for_select(scheduling, :abbr_week_day), :last, :first) do |b|
        - b.label { b.radio_button + b.text + content_tag(:div, class: 'weekday-date') { l(b.object.last.to_date, format: :yearless_date) } }
    - else
      = f.collection_check_boxes(:days, cwdays_for_select(scheduling, :abbr_week_day), :last, :first) do |b|
        - b.label { b.check_box + b.text + content_tag(:div, class: 'weekday-date') { l(b.object.last.to_date, format: :yearless_date) } }
      = f.input :date, as: :hidden

  = f.input :start_time, as: :string, wrapper_html: {class: 'start-time'}
  = f.input :end_time, as: :string, wrapper_html: {class: 'end-time'}

= f.input :all_day, as: :boolean

= f.association :employee, as: :select, collection: employees_for_select(scheduling),
  input_html: { class: 'chosen-select' }

- if current_account.qualifications.present?
  = f.association :qualification, as: :select, collection: current_account.qualifications,
    input_html: { class: 'chosen-select' }

- if current_organization.teams.present?
  = f.association :team, as: :select, include_blank: true, collection: scheduling.plan.organization.teams,
    input_html: { class: 'chosen-select' }

-# Currently the passive unavailabilty feature is deactivated. Comment in again
-# when enabling the feature again.
-# = f.input :represents_unavailability, as: :radio_buttons,
-#   collection: represents_unavailability_options, wrapper_html: { class: 'represents_unavailability' }
